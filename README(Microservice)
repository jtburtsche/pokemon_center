Microservice Read Me:

Partner Contract:
1. How you will communicate with each other:
We will primarily use Microsoft Teams as well as Google Docs and Canvas discussions
within group 131. We gave each other our phone numbers in case of an emergency as
well.
2. Expectations for responsiveness:
Responses to questions and collaboration should be given within 24 hours. If no
response is received a text message can be expected.
3. Expectation to finish early:
We want to make sure that we don’t get too far behind. This means that we will start
early and hopefully finish early as well. We believe that there should be significant
progress made weekly. In order to assure this, communication about a section of an
assignment must occur at least 5 days before the due date to put together a plan.
4. Do Your Part:
If someone fails to do their part on a section of the assignment they can expect to do a
little more on the next. This will create a fair and equal environment. If one of us just
isn’t doing their part of the assignment at all, a message to a professor will be made out.
This is only in extreme circumstances.
5. Communication Style:
We want to create an environment where both of us feel comfortable to share our ideas
and work easily together. We need to keep our chat positive. There isn’t really a
punishment that comes with this rule because we are adults. However, we need to keep
this rule in mind to ensure good productivity.

Microservice How Too:

Requesting Data:

1. Start up microservice.py. This will setup the server and it will begin looking for a connection. You may have to change the port
number depending on use.

2. Start up microservice_client.py and enter the URL that you wish to gather data from. There will be a prompt that will print from the screen where you can type it in and hit enter.
If you want to change this to automatically send the link you will have to manipulate the code a little bit.
Make sure that the port number for the client/server matchup.

Example: What url?: http://www.omdbapi.com/?t=The+Super+Mario+Bros.+Movie&apikey=7b779361     -this is the url which we want to gather json data from (all you have to do is enter this...the rest is returned)
Sending: http://www.omdbapi.com/?t=The+Super+Mario+Bros.+Movie&apikey=7b779361
Received: {"Title":"The Super Mario Bros. Movie","Year":"2023","Rated":"PG","Released":"05 Apr 2023","Runtime":"92 min","Genre":"Animation, Adventure, Comedy","Director":"Aaron Horvath, Michael Jelenic, Pierre Leduc","Writer":"Matthew Fogel","Actors":"Chris Pratt, Anya Taylor-Joy, Charlie Day","Plot":"A plumber named Mario travels through an underground labyrinth with his brother Luigi, trying to save a captured princess.","Language":"English","Country":"United States, Japan","Awards":"1 win & 41 nominations","Poster":"https://m.media-amazon.com/images/M/MV5BOTJhNzlmNzctNTU5Yy00N2YwLThhMjQtZDM0YjEzN2Y0ZjNhXkEyXkFqcGdeQXVyMTEwMTQ4MzU5._V1_SX300.jpg","Ratings":[{"Source":"Internet Movie Database","Value":"7.0/10"},{"Source":"Rotten Tomatoes","Value":"59%"},{"Source":"Metacritic","Value":"46/100"}],"Metascore":"46","imdbRating":"7.0","imdbVotes":"229,012","imdbID":"tt6718170","Type":"movie","DVD":"16 May 2023","BoxOffice":"$574,934,330","Production":"N/A","Website":"N/A","Response":"True"}
The Super Mario Bros. Movie



Receiving data

1. Once you receive the dict from the server you can request whatever information that you want about the film. Take a look at line
27 in microservice_client.py. It gives you an example call that you can use.

2. Mess around with the information that you want to work with. Try sending it other movie links. If you have any problems let me
know!